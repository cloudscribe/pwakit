const PushNotificationSettings = function () { let t, i; function o(t, i) { for (var o = document.querySelectorAll("[data-push-subscribe-button]"), e = 0; e < o.length; ++e) { var n = o[e]; t || i ? n.style.display = "none" : n.style.display = "inline-block" } for (var s = document.querySelectorAll("[data-push-unsubscribe-button]"), e = 0; e < s.length; ++e) { var r = s[e]; t || !i ? r.style.display = "none" : r.style.display = "block" } for (var u = document.querySelectorAll("[data-show-if-not-push-subscribed]"), e = 0; e < u.length; ++e) { var c = u[e]; t || !i ? (c.style.display = "block", c.classList.add("show")) : (c.style.display = "none", c.classList.remove("show")) } } function e() { t ? n() : PushNotificationsController.retrievePublicKey().then(function (i) { t = i, n() }).catch(function (t) { console.log(t) }) } function n() { i.pushManager.subscribe({ userVisibleOnly: !0, applicationServerKey: t }).then(function (t) { PushNotificationsController.storePushSubscription(t).then(function (t) { t.ok ? console.log("Successfully subscribed for Push Notifications") : console.log("Failed to store the Push Notifications subscrition on server") }).catch(function (t) { console.log("Failed to store the Push Notifications subscrition on server: " + t) }), o(!1, !0) }).catch(function (t) { "denied" === Notification.permission ? o(!0, !1) : console.log("Failed to subscribe for Push Notifications: " + t) }) } function s() { i.pushManager.getSubscription().then(function (t) { t && t.unsubscribe().then(function () { PushNotificationsController.discardPushSubscription(t).then(function (t) { t.ok ? console.log("Successfully unsubscribed from Push Notifications") : console.log("Failed to discard the Push Notifications subscrition from server") }).catch(function (t) { console.log("Failed to discard the Push Notifications subscrition from server: " + t) }), o(!1, !1) }).catch(function (t) { console.log("Failed to unsubscribe from Push Notifications: " + t) }) }) } return { initialize: function (t) { (i = t) ? (console.log("found registration"), function t() { for (var n = document.querySelectorAll("[data-push-subscribe-button]"), r = 0; r < n.length; ++r)n[r].addEventListener("click", e); for (var u = document.querySelectorAll("[data-push-unsubscribe-button]"), r = 0; r < u.length; ++r)u[r].addEventListener("click", s); i.pushManager.getSubscription().then(function (t) { if (o("denied" === Notification.permission, null !== t), "denied" === Notification.permission) for (var i = document.querySelectorAll("[data-show-if-push-not-supported]"), e = 0; e < i.length; ++e)i[e].style.display = "block"; Notification.permission, null !== t && (console.log("found subscription"), console.log(t), PushNotificationsController.storePushSubscription(t).then(function (t) { t.ok ? console.log("Successfully saved subscription") : console.log("Failed to uppdate subscription") }).catch(function (t) { console.log("Failed to update subscription on server: " + t) })) }) }()) : console.log("registration not found") } } }(); document.addEventListener("DOMContentLoaded", function () { if ("serviceWorker" in navigator && "PushManager" in window) navigator.serviceWorker.ready.then(function (t) { PushNotificationSettings.initialize(t) }); else if (!("PushManager" in window)) { console.log("push not supported"); for (var t = document.querySelectorAll("[data-show-if-push-not-supported]"), i = 0; i < t.length; ++i)t[i].style.display = "block" } });